/*
 * This file is generated by jOOQ.
 */
package im.wangbo.java.usecases.generated.tables.daos;


import im.wangbo.java.usecases.generated.tables.BookToBookStore;
import im.wangbo.java.usecases.generated.tables.records.BookToBookStoreRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookToBookStoreDao extends DAOImpl<BookToBookStoreRecord, im.wangbo.java.usecases.generated.tables.pojos.BookToBookStore, Record2<String, Integer>> {

    /**
     * Create a new BookToBookStoreDao without any configuration
     */
    public BookToBookStoreDao() {
        super(BookToBookStore.BOOK_TO_BOOK_STORE, im.wangbo.java.usecases.generated.tables.pojos.BookToBookStore.class);
    }

    /**
     * Create a new BookToBookStoreDao with an attached configuration
     */
    public BookToBookStoreDao(Configuration configuration) {
        super(BookToBookStore.BOOK_TO_BOOK_STORE, im.wangbo.java.usecases.generated.tables.pojos.BookToBookStore.class, configuration);
    }

    @Override
    public Record2<String, Integer> getId(im.wangbo.java.usecases.generated.tables.pojos.BookToBookStore object) {
        return compositeKeyRecord(object.getName(), object.getBookId());
    }

    /**
     * Fetch records that have <code>NAME BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<im.wangbo.java.usecases.generated.tables.pojos.BookToBookStore> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(BookToBookStore.BOOK_TO_BOOK_STORE.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>NAME IN (values)</code>
     */
    public List<im.wangbo.java.usecases.generated.tables.pojos.BookToBookStore> fetchByName(String... values) {
        return fetch(BookToBookStore.BOOK_TO_BOOK_STORE.NAME, values);
    }

    /**
     * Fetch records that have <code>BOOK_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<im.wangbo.java.usecases.generated.tables.pojos.BookToBookStore> fetchRangeOfBookId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BookToBookStore.BOOK_TO_BOOK_STORE.BOOK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>BOOK_ID IN (values)</code>
     */
    public List<im.wangbo.java.usecases.generated.tables.pojos.BookToBookStore> fetchByBookId(Integer... values) {
        return fetch(BookToBookStore.BOOK_TO_BOOK_STORE.BOOK_ID, values);
    }

    /**
     * Fetch records that have <code>STOCK BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<im.wangbo.java.usecases.generated.tables.pojos.BookToBookStore> fetchRangeOfStock(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BookToBookStore.BOOK_TO_BOOK_STORE.STOCK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>STOCK IN (values)</code>
     */
    public List<im.wangbo.java.usecases.generated.tables.pojos.BookToBookStore> fetchByStock(Integer... values) {
        return fetch(BookToBookStore.BOOK_TO_BOOK_STORE.STOCK, values);
    }
}
